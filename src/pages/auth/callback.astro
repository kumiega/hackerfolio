---
export const prerender = false;
---

<script>
  import { supabaseClient } from "@/db/supabase.client";
  import { AuthService } from "@/lib/services/auth.service";
  import { repositories } from "@/lib/repositories";

  // Handle implicit OAuth flow with automatic session detection
  async function handleCallback() {
    try {
      repositories.initialize(supabaseClient);

      // First check if user is already authenticated (for page refreshes/navigation)
      const session = await AuthService.getCurrentSession();

      if (session && !session.profile?.is_onboarded) {
        // User is already authenticated, redirect to onboarding
        // The onboarding page will handle profile creation and session validation
        window.location.href = "/onboarding";
        return;
      }

      if (session && session.profile?.is_onboarded) {
        window.location.href = "/dashboard";
        return;
      }

      // Check for OAuth errors in URL fragment
      const hash = window.location.hash.substring(1);
      const params = new URLSearchParams(hash);
      const error = params.get("error");
      const errorDescription = params.get("error_description");

      if (error) {
        console.error("OAuth error:", error, errorDescription);
        window.location.href = `/login?error=oauth_error`;
        return;
      }

      // Check if there's OAuth callback data in the URL
      const accessToken = params.get("access_token");
      const refreshToken = params.get("refresh_token");

      if (accessToken && refreshToken) {
        // This is a fresh OAuth callback, set the session
        const { error: setSessionError } = await supabaseClient.auth.setSession({
          access_token: accessToken,
          refresh_token: refreshToken,
        });

        if (setSessionError) {
          window.location.href = `/login?error=session_failed`;
          return;
        }

        window.location.href = "/dashboard";
      } else {
        // No OAuth callback data and no existing session, redirect to login
        window.location.href = "/login?error=no_session";
      }
    } catch (err) {
      console.error("Unexpected error during callback:", err);
      // window.location.href = "/login?error=unexpected_error";
    }
  }

  // Run the callback handler when the page loads
  handleCallback();
</script>

<div class="min-h-screen flex items-center justify-center bg-background">
  <div class="text-center">
    <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-primary mx-auto mb-4"></div>
    <p class="text-muted-foreground">Completing authentication...</p>
  </div>
</div>
