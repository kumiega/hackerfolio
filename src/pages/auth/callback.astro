---
export const prerender = false;
---

<script>
import { supabaseClient } from "@/db/supabase.client";

// Handle implicit OAuth flow with automatic session detection
async function handleCallback() {
  try {
    // Check for OAuth errors in URL fragment first
    const hash = window.location.hash.substring(1);
    const params = new URLSearchParams(hash);
    const error = params.get("error");
    const errorDescription = params.get("error_description");

    if (error) {
      console.error("OAuth error:", error, errorDescription);
      window.location.href = `/login?error=oauth_error&message=${encodeURIComponent(errorDescription || error)}`;
      return;
    }

    // Supabase will automatically detect and set the session from URL fragment
    // when detectSessionInUrl is enabled
    const {
      data: { session },
      error: sessionError,
    } = await supabaseClient.auth.getSession();

    if (sessionError) {
      console.error("Session error:", sessionError);
      window.location.href = `/login?error=session_failed&message=${encodeURIComponent(sessionError.message)}`;
      return;
    }

    if (session?.user) {
      // Success! User is authenticated
      console.log("User authenticated:", session.user.email);
      window.location.href = "/onboarding";
    } else {
      // No session found, redirect to login
      console.log("No session found, redirecting to login");
      window.location.href = "/login?error=no_session";
    }
  } catch (err) {
    console.error("Unexpected error during callback:", err);
    window.location.href = "/login?error=unexpected_error";
  }
}

// Run the callback handler when the page loads
handleCallback();
</script>

<div class="min-h-screen flex items-center justify-center bg-background">
  <div class="text-center">
    <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-primary mx-auto mb-4"></div>
    <p class="text-muted-foreground">Completing authentication...</p>
  </div>
</div>
